{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","console","log","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fef029be.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// console.log(process.env)\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\n// const firebaseConfigTesting = {\r\n//     apiKey: \"AIzaSyCR-4NyrgOR4_wsSCjAaAbnYPzxh8qubU0\",\r\n//     authDomain: \"redux-demo-86507.firebaseapp.com\",\r\n//     projectId: \"redux-demo-86507\",\r\n//     storageBucket: \"redux-demo-86507.appspot.com\",\r\n//     messagingSenderId: \"648839871265\",\r\n//     appId: \"1:648839871265:web:86cba879a80573538f9c60\"\r\n// };\r\n\r\n// if ( process.env.NODE_ENV === 'test' ) {\r\n//     // testing\r\n//     firebase.initializeApp(firebaseConfigTesting)\r\n// } else {\r\n//     // dev/prod\r\n//     firebase.initializeApp(firebaseConfig)\r\n// }\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db, \r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\nexport const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dfz2jhlae/upload'\r\n\r\n    const formData = new FormData()\r\n    formData.append('upload_preset','react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json()\r\n            return cloudResp.secure_url\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n        // console.log(err)\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        // console.log(snapHijo.data())\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    // console.log(notesSnap);\r\n\r\n    return notes;\r\n\r\n}","\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        // console.log(uid)\r\n\r\n        // Es lo mismo solo que desestructurado\r\n        // const {uid} = getState().auth;\r\n        // console.log(uid)\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n            \r\n            const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n            // console.log(doc)\r\n    \r\n            dispatch(activeNote(doc.id, newNote))\r\n    \r\n            dispatch(addNewNote(doc.id, newNote))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async (dispatch) => {\r\n\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type:types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore))\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}   \r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote} = getState().notes;\r\n        // console.log(file)\r\n        // console.log(activeNote)\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n\r\n        })\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        // console.log(fileUrl)\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click()\r\n        // console.log('picture')\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        // console.log(e.target.files)\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active: note} = useSelector(state => state.notes)\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note)\r\n\r\n    // console.log(formValues)\r\n\r\n    const {body, title, id} = formValues\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        \r\n        if (note.id !== activeId.current) {\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, {...formValues}))\r\n        // console.log(formValues)\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n\r\n\r\n    // console.log(note)\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\" >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    \r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    &&\r\n                    (<div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n\r\n","import { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from './ui'\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from './notes'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n\r\n            }).catch(e => {\r\n                //console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error!!!', e.message, 'error');\r\n            })\r\n\r\n        // setTimeout(() => {\r\n        //     dispatch(login(123, 'Pedro'));\r\n        // }, 3500);\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                // console.log(user)\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            }).catch(e => {\r\n                //console.log(e)\r\n                Swal.fire('Error!!!', e.message, 'error');\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//se desestructura en el user de la info que manda el boton y solo mostramos el uid y displayName\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout())\r\n        dispatch(noteLogout())\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {\r\n            date, title, body, url\r\n        })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    // const entries = [1,2,3,4,5]\r\n    return (\r\n        <div \r\n            className=\"journal__entries\"\r\n        >\r\n\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n\r\n\r\n    const handleLogout = () => {\r\n        //console.log('click')\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n                }\r\n            </main>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'victor1@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        //console.log(email, password)\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        //console.log('Hey!!')\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                // disabled={true}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n\r\n                    <p>Login with social metworks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n            </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    //console.log(msgError)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Victor',\r\n        email: 'victor1@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues\r\n\r\n\r\n   \r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        //console.log(name, email, password, password2)\r\n\r\n        if (isFormValid()) {\r\n            // console.log('Formulario correcto')\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n\r\n      \r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            // console.log('Name is required');\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'))\r\n            // console.log('Email is not valid')\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'))\r\n            // console.log('Password should be at least 6 characters and match each other')\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n            </button>\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n            </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}  \r\n                    />\r\n                    <Route \r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen} \r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" /> \r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n        \r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props } />\r\n                    :(<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : <Component {...props } />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nimport { startLoadingNotes } from '../actions/notes'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [cheking, setCheking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true)\r\n\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n            setCheking(false)\r\n        })\r\n\r\n    }, [dispatch, setCheking, setIsLoggedIn])\r\n\r\n    if (cheking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n    \r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}